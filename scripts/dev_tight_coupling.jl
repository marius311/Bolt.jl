
TCA_condition(k, ‚Ñã‚Çì, œÑ‚Çì‚Ä≤) = (abs(k / (‚Ñã‚Çì * œÑ‚Çì‚Ä≤)) < 0.1) & (abs(œÑ‚Çì‚Ä≤) > 10.0)

# NOTE: NO NEUTRINOS ùí©
function hierarchy!(du, u, p::AbstractCosmoParams, x)
    ‚Ñì·µß, Œ©r, Œ©b, Œ©m = p.‚Ñì·µß, p.Œ©r, p.Œ©b, p.Œ©m
    H‚ÇÄ¬≤ = bg.H‚ÇÄ^2
    ‚Ñã‚Çì, ‚Ñã‚Çì‚Ä≤ = bg.‚Ñã(x), bg.‚Ñã‚Ä≤(x)
    œÑ‚Çì‚Ä≤, œÑ‚Çì‚Ä≤‚Ä≤ = ih.œÑ‚Ä≤(x), ih.œÑ‚Ä≤‚Ä≤(x)
    a = x2a(x)
    R = 4Œ©r / (3Œ©b * a)

    # get array views of photon perturbations
    Œò = OffsetVector(view(u, 1:(‚Ñì·µß+1)), 0:‚Ñì·µß)  # indicies 0 through ‚Ñì·µß
    Œò‚Ä≤ = OffsetVector(view(du, 1:(‚Ñì·µß+1)), 0:‚Ñì·µß)
    Œò·µñ = OffsetVector(view(u, (‚Ñì·µß+2):(2‚Ñì·µß+2)), 0:‚Ñì·µß)  # indicies 0 through ‚Ñì·µß
    Œò·µñ‚Ä≤ = OffsetVector(view(du, (‚Ñì·µß+2):(2‚Ñì·µß+2)), 0:‚Ñì·µß)
    Œ¶, Œ¥, v, Œ¥_b, v_b = u[(2‚Ñì·µß+3):(2‚Ñì·µß+7)]

    # metric perturbations
    Œ® = -Œ¶ - 12H‚ÇÄ¬≤ / k^2 / a^2 * (Œ©r * Œò[2])
    Œ¶‚Ä≤ = Œ® - k^2 / (3‚Ñã‚Çì^2) * Œ¶ + H‚ÇÄ¬≤ / (2‚Ñã‚Çì^2) * (
        Œ©m * a^(-1) * Œ¥ + Œ©b * a^(-1) * Œ¥_b + 4Œ©r * a^(-2) * Œò[0])

    # matter
    Œ¥‚Ä≤ = k / ‚Ñã‚Çì * v - 3Œ¶‚Ä≤
    v‚Ä≤ = -v - k / ‚Ñã‚Çì * Œ®
    Œ¥_b‚Ä≤ = k / ‚Ñã‚Çì * v_b - 3Œ¶‚Ä≤

    Œò‚Ä≤[0] = -k / ‚Ñã‚Çì * Œò[1] - Œ¶‚Ä≤
    if TCA_condition(k, ‚Ñã‚Çì, œÑ‚Çì‚Ä≤)
        Œò‚Ä≤[2] = 0.0  # could be solved for
        term_3Œò‚Ä≤_vb‚Ä≤ = (
            -((1-R)*œÑ‚Çì‚Ä≤ + (1+R)*œÑ‚Çì‚Ä≤‚Ä≤) * (3Œò[1] + v_b) - k * Œ® / ‚Ñã‚Çì
            + (1 - ‚Ñã‚Çì‚Ä≤ / ‚Ñã‚Çì) * (k / ‚Ñã‚Çì) * (-Œò[0] + 2Œò[2]) + k / ‚Ñã‚Çì * (-Œò‚Ä≤[0] + 2Œò‚Ä≤[2])
        ) / ((1+R)*œÑ‚Çì‚Ä≤ + ‚Ñã‚Çì‚Ä≤ / ‚Ñã‚Çì - 1)
        v_b‚Ä≤ = (-v_b - k * Œ® / ‚Ñã‚Çì + R * (
            term_3Œò‚Ä≤_vb‚Ä≤ + k / ‚Ñã‚Çì * (-Œò[0] + 2Œò[2]) - k / ‚Ñã‚Çì * Œ®
        )) / (1+R)
        Œò‚Ä≤[1] = (term_3Œò‚Ä≤_vb‚Ä≤ - v_b‚Ä≤) / 3
    else
        v_b‚Ä≤ = -v_b - k / ‚Ñã‚Çì * Œ® + œÑ‚Çì‚Ä≤ * R * (3Œò[1] + v_b)
        Œò‚Ä≤[1] = k / (3‚Ñã‚Çì) * Œò[0] - 2k / (3‚Ñã‚Çì) * Œò[2] + k / (3‚Ñã‚Çì) * Œ® + œÑ‚Çì‚Ä≤ * (Œò[1] + v_b/3)
    end

    # photons
    Œ† = Œò[2] + Œò·µñ[2] + Œò·µñ[0]
    for ‚Ñì in 2:(‚Ñì·µß-1)
        Œò‚Ä≤[‚Ñì] = ‚Ñì * k / ((2‚Ñì+1) * ‚Ñã‚Çì) * Œò[‚Ñì-1] -
            (‚Ñì+1) * k / ((2‚Ñì+1) * ‚Ñã‚Çì) * Œò[‚Ñì+1] + œÑ‚Çì‚Ä≤ * (Œò[‚Ñì] - Œ† * Œ¥_kron(‚Ñì, 2) / 10)
    end
    # polarized photons
    Œò·µñ‚Ä≤[0] = -k / ‚Ñã‚Çì * Œò·µñ[1] + œÑ‚Çì‚Ä≤ * (Œò·µñ[0] - Œ† / 2)
    for ‚Ñì in 1:(‚Ñì·µß-1)
        Œò·µñ‚Ä≤[‚Ñì] = ‚Ñì * k / ((2‚Ñì+1) * ‚Ñã‚Çì) * Œò·µñ[‚Ñì-1] -
            (‚Ñì+1) * k / ((2‚Ñì+1) * ‚Ñã‚Çì) * Œò·µñ[‚Ñì+1] + œÑ‚Çì‚Ä≤ * (Œò·µñ[‚Ñì] - Œ† * Œ¥_kron(‚Ñì, 2) / 10)
    end
    # photon hierarchy boundary conditions
    Œò‚Ä≤[‚Ñì·µß] = k / ‚Ñã‚Çì * Œò[‚Ñì·µß-1] - (‚Ñì·µß + 1) / (‚Ñã‚Çì * bg.Œ∑(x)) + œÑ‚Çì‚Ä≤ * Œò[‚Ñì·µß]
    Œò·µñ‚Ä≤[‚Ñì·µß] = k / ‚Ñã‚Çì * Œò·µñ[‚Ñì·µß-1] - (‚Ñì·µß + 1) / (‚Ñã‚Çì * bg.Œ∑(x)) + œÑ‚Çì‚Ä≤ * Œò·µñ[‚Ñì·µß]

    du[(2‚Ñì·µß+3):(2‚Ñì·µß+7)] .= Œ¶‚Ä≤, Œ¥‚Ä≤, v‚Ä≤, Œ¥_b‚Ä≤, v_b‚Ä≤  # put non-photon perturbations back in
    return nothing
end
